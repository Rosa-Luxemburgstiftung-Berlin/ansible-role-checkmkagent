---

- name: fetch agent page from checkmk server
  delegate_to: localhost
  uri:
    url: "{{ checkmk_proto }}://{{ checkmk_hostname }}/{{ checkmk_path }}/"
    return_content: true
  register: checkmkagents
  when:
    - checkmk_agent_version is not defined

- name: register agent version from server
  set_fact:
    _checkmk_agent_deb: '{{ checkmkagents.content | regex_search("check-mk-agent_[0-9]\.[0-9]\.[0-9]p[0-9]+-1_all.deb") }}'
  when:
    - checkmk_agent_version is not defined
    - not checkmkagents.failed
    - checkmkagents.status == 200

- name: extract version from deb listed by the server
  set_fact:
    checkmk_agent_version: '{{ _checkmk_agent_deb | regex_search("[0-9]\.[0-9]\.[0-9]p[0-9]+") }}'

- assert:
    quiet: true
    msg: "checkmk_agent_version can not be determined from server"
    that:
      - checkmk_agent_version is defined
      - checkmk_agent_version | length > 0

- name: fetch {{ checkmk_agent_deb }}
  delegate_to: localhost
  get_url:
    url: "{{ checkmk_proto }}://{{ checkmk_hostname }}/{{ checkmk_path }}/{{ checkmk_agent_deb }}"
    dest: /var/tmp/{{ checkmk_agent_deb }}
    force: false
    mode: 0600

- name: upload {{ checkmk_agent_deb }}
  copy:
    src: /var/tmp/{{ checkmk_agent_deb }}
    dest: /var/tmp/{{ checkmk_agent_deb }}
    force: false
    mode: 0600

- name: Install check_mk agent on Debian-based systems
  apt:
    deb: /var/tmp/{{ checkmk_agent_deb }}
  when:
    - ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"
    - not skip_checkmk_agent_deb|default(false)

- name: install required packages
  apt:
    name: "{{ checkmkagent_required_packages }}"
    update_cache: true
    cache_valid_time: 3600

- name: purge check-mk-agent-logwatch
  apt:
    name: check-mk-agent-logwatch
    state: absent

- name: configure check_mk logwatch
  template:
    src: check_mk_logwatch.cfg.j2
    dest: /etc/check_mk/logwatch.cfg
    mode: 0644
  tags:
    - checkmk

- name: stop check_mk.socket
  systemd:
    name: check_mk.socket
    state: stopped
    enabled: false
    masked: true
    daemon_reload: true
  when: check_mk_agent_use_xinetd

# required if we switch from systemd to xinetd
- meta: flush_handlers

- name: fail if both variants enabled
  fail:
    msg: "both variants set to {{ check_mk_agent_use_xinetd }}"
  when: check_mk_agent_use_xinetd == check_mk_agent_use_systemd

- name: install xinetd
  apt:
    name: xinetd
    update_cache: true
    cache_valid_time: 3600
  tags:
    - checkmk
  when: check_mk_agent_use_xinetd

- name: checkmk service file
  template:
    src: check_mk.xinetd.j2
    dest: /etc/xinetd.d/check_mk
    mode: 0644
  tags:
    - checkmk
  notify:
    - xinetd
  when: check_mk_agent_use_xinetd

- name: remove checkmk service file
  file:
    path: /etc/xinetd.d/check_mk
    state: absent
  tags:
    - checkmk
  notify:
    - xinetd
  when: check_mk_agent_use_systemd

# required if we change from xinetd to systemd
- meta: flush_handlers

- name: purge xinetd
  apt:
    name: xinetd
    state: absent
    purge: true
  tags:
    - checkmk
  when:
    - check_mk_agent_use_systemd
    - purge_xinetd|default(False)

- name: start check_mk.socket
  systemd:
    name: check_mk.socket
    state: started
    enabled: true
    masked: false
    daemon_reload: true
  when: check_mk_agent_use_systemd

- name: Copy check plugins from main check_mk site
  delegate_to: localhost
  get_url:
    url: "{{ checkmk_proto }}://{{ checkmk_hostname }}/{{ checkmk_path }}/plugins/{{ item }}"
    dest: "/var/tmp/{{ item }}"
    force: false
    mode: 0600
  with_items:
    - "{{ check_mk_plugins }}"
    - "{{ check_mk_logwatch_plugin }}"

- name: "Upload {{ check_mk_logwatch_plugin }} plugin"
  copy:
    src: "/var/tmp/{{ item }}"
    dest: "/usr/lib/check_mk_agent/plugins/{{ item }}"
    owner: root
    group: root
    mode: 0755
  with_items: "{{ check_mk_logwatch_plugin }}"
  when: check_mk_logwatch

- name: "{{ check_mk_logwatch_plugin }} requires python2"
  apt:
    name: python2
  when: check_mk_logwatch

- name: Configure logwatch plugin
  template:
    src: check_mk_logwatch.cfg.j2
    dest: /etc/check_mk/logwatch.cfg
    owner: root
    group: root
    mode: 0644

- name: Upload check plugins
  copy:
    src: "/var/tmp/{{ item }}"
    dest: "/usr/lib/check_mk_agent/plugins/{{ item }}"
    owner: root
    group: root
    mode: 0755
  with_items: "{{ check_mk_plugins }}"

- name: Copy local check_mk cfg files
  copy:
    src: "{{ item }}"
    dest: "/etc/check_mk/{{ item | basename }}"
    owner: root
    group: root
    mode: 0400
  with_items: "{{ check_mk_local_cfg }}"

- name: Copy local check_mk checks
  copy:
    src: "{{ item }}"
    dest: "/usr/lib/check_mk_agent/local/{{ item | basename }}"
    owner: root
    group: root
    mode: 0755
  with_items: "{{ check_mk_local_plugins }}"

# vim: tabstop=2 expandtab shiftwidth=2 softtabstop=2 smartindent nu ft=yaml
